package com.example.shanbeidemo.activity;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.example.shanbeidemo.R;
import com.example.shanbeidemo.activity.utils.JSONUtils;
import com.example.shanbeidemo.activity.utils.ReadDataFromFile;
import com.example.shanbeidemo.activity.utils.TextUtilTools;
import com.example.shanbeidemo.adapter.WordAdapter;
import com.example.shanbeidemo.bean.Word;

import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.TextureView;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.Button;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class ArticleDetailActivity extends Activity implements OnClickListener {
	String Result = "";
	private ArrayList<Word> allWords = new ArrayList<Word>();
	int lesson_id;
	String lesson_title;
	String str_article;
	String str_translation;
	ArrayList<String> wordlist = new ArrayList<String>();
	ArrayList<String> levelwordlist = new ArrayList<String>();
	String file_name;
	ReadDataFromFile read = null;
	TextView tv_title;
	TextView tv_article;
	TextView translation;
	TextView lessonid;
	ListView word_lv;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.activity_article);
		file_name = getIntent().getExtras().getString("file_name");
		getLevelWord();
		initView();
		initData();
		setView();

	}

	private void setView() {
		// TODO Auto-generated method stub
		tv_title.setText(lesson_title);
		tv_article.setText(str_article);
		translation.setText(str_translation);
		lessonid.setText("Lesson " + lesson_id);
		WordAdapter adapter = new WordAdapter(ArticleDetailActivity.this,
				wordlist);
		word_lv.setAdapter(adapter);
		setListViewHeight(word_lv);
	}

	private void initData() {
		getLessonData();
		// new loadData().execute(file_name);
	}

	private void getLessonData() {
		// TODO Auto-generated method stub
		try {
			InputStreamReader inputReader = new InputStreamReader(
					getResources().getAssets().open(file_name));
			BufferedReader bufReader = new BufferedReader(inputReader);
			String line = "";
			while ((line = bufReader.readLine()) != null)
				Result += line;

		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
		JSONObject jsonObject;
		try {
			jsonObject = new JSONObject(Result);
			lesson_id = JSONUtils.getInt(jsonObject, "lesson_id", 1);
			lesson_title = JSONUtils.getString(jsonObject, "title", " ");
			str_article = JSONUtils.getString(jsonObject, "articles", " ");
			str_translation = JSONUtils.getString(jsonObject, "translation",
					" ");
			JSONArray wordsArray = jsonObject.getJSONArray("wordslist");
			for (int j = 0; j < wordsArray.length(); j++) {
				Log.i("json", wordsArray.getString(j));
				wordlist.add((String) wordsArray.getString(j));
			}
		} catch (JSONException e) {
			e.printStackTrace();
		}

	}

	private void initView() {
		tv_title = (TextView) findViewById(R.id.tv_title);
		tv_article = (TextView) findViewById(R.id.tv_article);
		translation = (TextView) findViewById(R.id.tv_trn);
		lessonid = (TextView) findViewById(R.id.lesson_id);
		word_lv = (ListView) findViewById(R.id.lv_wordlist);
		Button btn_back = (Button) findViewById(R.id.btn_back);
		Button btn_level = (Button) findViewById(R.id.btn_level);
		btn_back.setOnClickListener(this);
		btn_level.setOnClickListener(this);
	}

	public void setListViewHeight(ListView listView) {

		// 获取ListView对应的Adapter

		ListAdapter listAdapter = listView.getAdapter();

		if (listAdapter == null) {
			return;
		}
		int totalHeight = 0;
		for (int i = 0, len = listAdapter.getCount(); i < len; i++) { // listAdapter.getCount()返回数据项的数目
			View listItem = listAdapter.getView(i, null, listView);
			listItem.measure(0, 0); // 计算子项View 的宽高
			totalHeight += listItem.getMeasuredHeight(); // 统计所有子项的总高度
		}

		ViewGroup.LayoutParams params = listView.getLayoutParams();
		params.height = totalHeight
				+ (listView.getDividerHeight() * (listAdapter.getCount() - 1));
		listView.setLayoutParams(params);
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.btn_back:
			finish();
			break;
		case R.id.btn_level:
			hightlight();
			break;
		default:
			break;
		}
	}

	private void hightlight() {
		// TODO Auto-generated method stub
		tv_title.setText(TextUtilTools.highlight(lesson_title, "lesson"));
	}

	private void getLevelWord() {
		// TODO Auto-generated method stub
		try {
			InputStreamReader inputReader = new InputStreamReader(
					getResources().getAssets().open("nce4_words"));
			read = new ReadDataFromFile(inputReader);
			levelwordlist = read.getTheLevelWord(1);
			Toast.makeText(ArticleDetailActivity.this, levelwordlist.size(),
					Toast.LENGTH_SHORT).show();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	// class loadData extends AsyncTask<String, String, String> {
	// @Override
	// protected void onPreExecute() {
	// // TODO Auto-generated method stub
	// Log.i("getdata", "start loadData");
	//
	// }
	//
	// @Override
	// protected String doInBackground(String... params) {
	// // TODO Auto-generated method stub
	//
	// Log.i("getdata", "loadData now");
	// String file_name = params[0];
	// try {
	// InputStreamReader inputReader = new InputStreamReader(
	// getResources().getAssets().open(file_name));
	// BufferedReader bufReader = new BufferedReader(inputReader);
	// String line = "";
	// while ((line = bufReader.readLine()) != null)
	// Result += line;
	//
	// } catch (FileNotFoundException e) {
	// e.printStackTrace();
	// } catch (Exception e) {
	// e.printStackTrace();
	// }
	// JSONObject jsonObject;
	// try {
	// jsonObject = new JSONObject(Result);
	// lesson_id = JSONUtils.getInt(jsonObject, "lesson_id", 1);
	// lesson_title = JSONUtils.getString(jsonObject, "title", " ");
	// str_article = JSONUtils.getString(jsonObject, "articles", " ");
	// str_translation = JSONUtils.getString(jsonObject,
	// "translation", " ");
	// JSONArray wordsArray = jsonObject.getJSONArray("wordslist");
	// for (int j = 0; j < wordsArray.length(); j++) {
	// Log.i("json", wordsArray.getString(j));
	// wordlist.add((String) wordsArray.getString(j));
	// }
	// } catch (JSONException e) {
	// e.printStackTrace();
	// }
	// levelwordlist = read.getTheLevelWord(1);
	// return null;
	// }
	//
	// @Override
	// protected void onPostExecute(String result) {
	// Log.i("getdata", "loadData is over");
	// }

	// }

}
